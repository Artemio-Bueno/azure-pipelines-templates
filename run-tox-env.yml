parameters:
  libraries: []
  envs: []

jobs:
- ${{ each env in parameters.envs }}:
  - ${{ each env_pair in env }}:

    - job: ${{ variables['Agent.Id'] }}
      displayName: '${{ env_pair.value }} [${{ env_pair.key }}]'
      pool:
        ${{ if eq(env_pair.key, 'macosx') }}:
          vmImage: macOS 10.13
        ${{ if eq(env_pair.key, 'linux') }}:
          vmImage: Ubuntu 16.04
        ${{ if eq(env_pair.key, 'windows') }}:
          vmImage: vs2017-win2016

      steps:

      - checkout: self
        submodules: ${{ coalesce(parameters.submodules, true) }}

      - ${{ each tool_pair in parameters.libraries }}:
        - ${{ each library in tool_pair.value }}:
          - ${{ if and(eq(tool_pair.key, 'brew'), eq(variables['Agent.OS'], 'Darwin')) }}:
            - script: brew install ${{ library }}
              displayName: Installing ${{ library }} with brew
          - ${{ if and(eq(tool_pair.key, 'apt'), eq(variables['Agent.OS'], 'Linux')) }}:
            - script: sudo apt-get install -y ${{ library }}
              displayName: Installing ${{ library }} with apt
          - ${{ if and(eq(tool_pair.key, 'choco'), eq(variables['Agent.OS'], 'Windows_NT')) }}:
            - script: choco install ${{ library }}
              displayName: Installing ${{ library }} with choco

      - task: UsePythonVersion@0
        inputs:
          ${{ if startsWith(env_pair.value, 'py27') }}:
            versionSpec: '2.7'
          ${{ if startsWith(env_pair.value, 'py36') }}:
            versionSpec: '3.6'
          ${{ if startsWith(env_pair.value, 'py37') }}:
            versionSpec: '3.7'

      - ${{ if parameters.xvfb }}:
        - bash: |
            /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid \
                                    --make-pidfile --background --exec /usr/bin/Xvfb \
                                    -- :99 -screen 0 1920x1200x24 -ac \
                                    +extension GLX +render -noreset
          displayName: Starting Xvfb

      - ${{ if contains(env_pair.value, 'conda') }}:

        - script: |
            echo "##vso[task.prependpath]$CONDA/bin"
            conda create --yes --quiet --name myEnvironment
            conda activate myEnvironment
          displayName: Create conda environemnt

        - ${{ if startsWith(env_pair.value, 'py27') }}:
          - script: conda install --yes --quiet python=2.7 pip
            displayName: Installing Python 2.7 in conda environment
        - ${{ if startsWith(env_pair.value, 'py36') }}:
          - script: conda install --yes --quiet python=3.6 pip
            displayName: Installing Python 3.6 in conda environment
        - ${{ if startsWith(env_pair.value, 'py37') }}:
          - script: conda install --yes --quiet python=3.7 pip
            displayName: Installing Python 3.7 in conda environment

        - script: python -m pip install --upgrade tox-conda
          displayName: install tox-conda

      - script: python -m pip install --upgrade tox
        displayName: Install tox

      - ${{ if contains(env_pair.value, ' -- ') }}:
        - script: tox -e ${{ env_pair.value }} --junitxml=junit/test-results.xml --cov-report=xml
          displayName: Running tox
      - ${{ if not(contains(env_pair.value, ' -- ')) }}:
        - script: tox -e ${{ env_pair.value }} -- --junitxml=junit/test-results.xml --cov-report=xml
          displayName: Running tox

        # env:
        #   DISPLAY: :99.0

      - script: |
          python -m pip install --upgrade codecov
          python -m codecov --name ${{ env_pair.key }}_${{ env_pair.value }}
        displayName: Running codecov
        condition: succeededOrFailed()

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-*.xml'
          testRunTitle: 'Publish test results for ${{ env_pair.key }}_${{ env_pair.value }}'

  # - ${{ if contains(env_pair.value, 'online') }}:
  #   - task: PublishCodeCoverageResults@1
  #     condition: succeededOrFailed()
  #     inputs:
  #       codeCoverageTool: Cobertura
  #       summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
  #       reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
